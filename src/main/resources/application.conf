######################################################
# URS state machine cluster config
######################################################

#akka.projection.jdbc.dialect=

akka {
  loglevel = DEBUG

  actor {
    provider = cluster

  #  serialization-bindings {
  #    "com.ur.akka.fsm.springakka.fsm.CborSerializable" = jackson-cbor
  # }
  }

  # For the sample, just bind to loopback and do not allow access from the network
  # the port is overridden by the logic in main class
  remote {
    artery {
      enabled = on
      transport = tcp
      canonical.hostname = "127.0.0.1"
      canonical.port = 2551
    }
  }

  cluster {
    seed-nodes = [
      "akka://URFSM@127.0.0.1:2551",
      "akka://URFSM@127.0.0.1:2552"]

    sharding {
      least-shard-allocation-strategy.rebalance-absolute-limit = 20
      least-shard-allocation-strategy.rebalance-relative-limit = 0.2
      verbose-debug-logging = true
      updating-state-timeout = 50s
      number-of-shards = 100
      
      #retry-interval = 10 s
      waiting-for-state-timeout = 80s
      passivation {
        default-idle-strategy.idle-entity.timeout = 1 minutes
      }
      
    }

    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }
}
